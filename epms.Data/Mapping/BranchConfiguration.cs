namespace epms.Entities.Models
{


    // ------------------------------------------------------------------------------------------------
    // This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
    // Created by Simon Hughes (https://about.me/simon.hughes).
    //
    // Do not make changes directly to this file - edit the template instead.
    //
    // The following connection settings were used to generate this file:
    //     Configuration file:     "F:\asp.net\EPMS\epms.DataTest\App.config"
    //     Connection String Name: "MyDbContext"
    //     Connection String:      "Server= 127.0.0.1;Database=TestDB;User Id=sa;password=**zapped**;;"
    // ------------------------------------------------------------------------------------------------
    // Database Edition       : Data Center Edition
    // Database Engine Edition: Enterprise

    // <auto-generated>
    // ReSharper disable ConvertPropertyToExpressionBody
    // ReSharper disable DoNotCallOverridableMethodsInConstructor
    // ReSharper disable EmptyNamespace
    // ReSharper disable InconsistentNaming
    // ReSharper disable PartialMethodWithSinglePart
    // ReSharper disable PartialTypeWithSinglePart
    // ReSharper disable RedundantNameQualifier
    // ReSharper disable RedundantOverridenMember
    // ReSharper disable UseNameofExpression
    // TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


    namespace epms.Data.Mapping
    {
        #region POCO Configuration

        // Branch
        [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.34.1.0")]
        public class BranchConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Branch>
        {
            public BranchConfiguration()
                : this("dbo")
            {
            }

            public BranchConfiguration(string schema)
            {
                ToTable("Branch", schema);
                HasKey(x => x.Id);

                Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
                Property(x => x.CompanyId).HasColumnName(@"CompanyId").HasColumnType("int").IsRequired();
                Property(x => x.BranchName).HasColumnName(@"BranchName").HasColumnType("nvarchar").IsRequired().HasMaxLength(150);
                Property(x => x.BranchCode).HasColumnName(@"BranchCode").HasColumnType("smallint").IsRequired();
                Property(x => x.Address).HasColumnName(@"Address").HasColumnType("nvarchar").IsRequired().HasMaxLength(150);
                Property(x => x.Phone).HasColumnName(@"Phone").HasColumnType("nvarchar").IsOptional().HasMaxLength(15);
                Property(x => x.Fax).HasColumnName(@"Fax").HasColumnType("nvarchar").IsOptional().HasMaxLength(15);
                Property(x => x.Email).HasColumnName(@"Email").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
                Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit").IsRequired();

                // Foreign keys
                HasRequired(a => a.Company).WithMany(b => b.Branches).HasForeignKey(c => c.CompanyId).WillCascadeOnDelete(false); // FK_Branch_Branch
            }
        }

        #endregion

    }
    // </auto-generated>


}
